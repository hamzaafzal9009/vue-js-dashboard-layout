{"remainingRequest":"/Library/WebServer/Documents/Projects/vue/Vite Dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Library/WebServer/Documents/Projects/vue/Vite Dashboard/src/components/Trips.vue?vue&type=style&index=0&id=4fd05424&scoped=true&lang=css&","dependencies":[{"path":"/Library/WebServer/Documents/Projects/vue/Vite Dashboard/src/components/Trips.vue","mtime":1615327408304},{"path":"/Library/WebServer/Documents/Projects/vue/Vite Dashboard/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/vue/Vite Dashboard/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/vue/Vite Dashboard/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/vue/Vite Dashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/vue/Vite Dashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmdyZXktdGV4dCB7CiAgY29sb3I6ICNjZWNlY2U7Cn0KLmdyZWVuLXRleHQgewogIGNvbG9yOiBkYXJrZ3JlZW47Cn0KCi5pbWctdXNlciB7CiAgd2lkdGg6IDUwcHg7CiAgaGVpZ2h0OiA1MHB4OwogIGJvcmRlci1yYWRpdXM6IDUwJTsKfQoKLmRyaXZlci1uYW1lIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAyNnB4OwogIGxlZnQ6IDgwcHg7Cn0KLnRleHQtY2VudGVyIHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0K"},{"version":3,"sources":["Trips.vue"],"names":[],"mappingslBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Trips.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div id=\"dashboard-container\">\n    <el-card class=\"card-min-height\">\n      <div class=\"card-header\">\n        <div class=\"card-title\">\n          <h3>Trips</h3>\n        </div>\n        <div class=\"card-actions\">\n          <div class=\"input-group\">\n            <el-popover\n              trigger=\"click\"\n              class=\"filter clickable\"\n              v-model=\"showFilters\"\n            >\n              <div class=\"filter-button\" slot=\"reference\">\n                <i class=\"fas fa-filter\"></i>\n              </div>\n              <div class=\"dropdown-filter-menu\">\n                <div class=\"dropdown-filter-option\">\n                  <label>Search By</label>\n                  <el-select v-model=\"search_by\" :collapse-tags=\"true\">\n                    <el-option class=\"capitalize\" value=\"Date\">Date </el-option>\n                    <el-option class=\"capitalize\" value=\"Driver Name\"\n                      >Driver Name\n                    </el-option>\n                    <el-option class=\"capitalize\" value=\"Rider Name\"\n                      >Rider Number\n                    </el-option>\n                    <el-option class=\"capitalize\" value=\"Price\"\n                      >Price\n                    </el-option>\n                  </el-select>\n                </div>\n              </div>\n            </el-popover>\n            <el-input\n              placeholder=\"Search Driver\"\n              @input=\"searchBy\"\n              v-model=\"search\"\n              ><i slot=\"suffix\" class=\"far fa-search\"></i\n            ></el-input>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"card-body\">\n        <el-tabs\n          v-model=\"activeName\"\n          @tab-click=\"setStatusFilter\"\n          type=\"border-card\"\n          lazy=\"true\"\n        >\n          <el-tab-pane\n            :label=\"tab.text\"\n            :name=\"tab.name\"\n            v-for=\"(tab, index) in tabs\"\n            :key=\"index\"\n          >\n            <el-table\n              :data=\"tripFilterData\"\n              style=\"width: 100%\"\n              v-if=\"status !== 'Canceled'\"\n              highlight-current-row\n              @row-click=\"handleCurrentChange\"\n              size=\"small\"\n              empty-text=\"No results found.\"\n            >\n              <el-table-column prop=\"parentDate\" label=\"Date\" sortable>\n                <template slot-scope=\"props\">\n                  <span>\n                    {{ props.row.parentDate || \"No Data Found\" }}\n                  </span>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"Rider\">\n                <template slot-scope=\"props\">\n                  <div class=\"clickable\">\n                    <span>\n                      <img\n                        :src=\"\n                          getItemObjectAvatarUrl(\n                            props.row,\n                            'user',\n                            'userAvatarUrl'\n                          )\n                        \"\n                        class=\"img-user\"\n                        alt=\"...\"\n                      />\n                    </span>\n                    <span v-if=\"typeof props === 'object'\" class=\"driver-name\">\n                      {{\n                        getItemObjectProperty(props.row, \"user\", \"userFullName\")\n                      }}\n                    </span>\n                  </div>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"Driver\">\n                <template slot-scope=\"props\">\n                  <div class=\"clickable\">\n                    <span>\n                      <img\n                        :src=\"\n                          getItemObjectAvatarUrl(\n                            props.row,\n                            'driver',\n                            'driverAvatarUrl'\n                          )\n                        \"\n                        class=\"img-user\"\n                        alt=\"...\"\n                      />\n                    </span>\n                    <span v-if=\"typeof props === 'object'\" class=\"driver-name\">\n                      {{\n                        getItemObjectProperty(\n                          props.row,\n                          \"driver\",\n                          \"driverFullName\"\n                        )\n                      }}\n                    </span>\n                  </div>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"Status\">\n                <template slot-scope=\"props\">\n                  {{ statusMap[props.row.rideStatus] }}\n                </template>\n              </el-table-column>\n              <el-table-column label=\"Final Price\">\n                <template slot-scope=\"props\">\n                  {{ props.row.finalPrice || \"No Data Found\" }}\n                </template>\n              </el-table-column>\n            </el-table>\n\n            <el-table\n              :data=\"tripFilterData\"\n              style=\"width: 100%\"\n              v-if=\"status === 'Canceled'\"\n              highlight-current-row\n              @row-click=\"handleCurrentChange\"\n              size=\"small\"\n              empty-text=\"No results found.\"\n            >\n              <el-table-column prop=\"creationTime\" label=\"Date\" sortable>\n                <template slot-scope=\"props\">\n                  <span v-if=\"props.row.creationTime\">\n                    <span>\n                      {{ props.row.creationTime.substring(0, 10) }} -\n                      {{ props.row.creationTime.substring(11, 19) }}\n                    </span>\n                  </span>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"Rider\">\n                <template slot-scope=\"props\">\n                  <div class=\"clickable\">\n                    <span>\n                      <img\n                        :src=\"getRiderAvatarUrl(props.row.requestorId)\"\n                        class=\"img-user\"\n                        alt=\"...\"\n                      />\n                    </span>\n                    <span v-if=\"typeof props === 'object'\" class=\"driver-name\">\n                      {{ getRiderName(props.row.requestorId) }}\n                    </span>\n                  </div>\n                </template>\n              </el-table-column>\n\n              <el-table-column label=\"Review\">\n                <template slot-scope=\"props\">\n                  <div>\n                    {{\n                      props.row.state && props.row.state.canceled\n                        ? props.row.state.canceled.description\n                        : \"No Review\"\n                    }}\n                  </div>\n                </template>\n              </el-table-column>\n              <el-table-column label=\"Stauts\">\n                <template>\n                  <div>\n                    {{ status }}\n                  </div>\n                </template>\n              </el-table-column>\n            </el-table>\n          </el-tab-pane>\n        </el-tabs>\n      </div>\n    </el-card>\n\n    <el-dialog\n      title=\"Trip Information\"\n      v-if=\"currentRow !== null\"\n      :visible.sync=\"dialog\"\n      width=\"70%\"\n      :before-close=\"handleClose\"\n      center\n    >\n      <el-row class=\"text-center\">\n        <el-col :span=\"12\">\n          <div class=\"b-bottom-right\">\n            <p>Driver Name</p>\n            <p>\n              <b>\n                {{\n                  currentRow.driver.driverFirstName +\n                    \" \" +\n                    currentRow.driver.driverLastName\n                }}\n              </b>\n            </p>\n          </div>\n          <div class=\"b-bottom-right\">\n            <p>Date</p>\n            <p>\n              <b>\n                {{ currentRow.parentDate }}\n              </b>\n            </p>\n          </div>\n        </el-col>\n        <el-col :span=\"12\">\n          <div class=\"b-bottom-right\">\n            <p>Rider Name</p>\n            <p>\n              <b>\n                {{ currentRow.user.userFullName }}\n              </b>\n            </p>\n          </div>\n          <div class=\"b-bottom-right\">\n            <p>Pickup</p>\n            <p>\n              <b>\n                {{ currentRow.pickUpLocation.itemTitle || \"-\" }}\n              </b>\n            </p>\n          </div>\n        </el-col>\n        <el-col :span=\"24\">\n          <div class=\"b-bottom-right\">\n            <p>Drop Off</p>\n            <p>\n              <b>\n                {{ currentRow.dropOffLocation.itemTitle || \"-\" }}\n              </b>\n            </p>\n          </div>\n        </el-col>\n      </el-row>\n\n      <span slot=\"footer\" class=\"dialog-footer\">\n        <el-button-group>\n          <el-button\n            type=\"primary\"\n            size=\"small\"\n            @click=\"$router.push(`/drivers/edit/${currentRow.driverId}`)\"\n            >Driver Profile</el-button\n          >\n          <el-button\n            type=\"primary\"\n            size=\"small\"\n            @click=\"$router.push(`/riders/edit/${currentRow.driverId}`)\"\n            >Rider Profile</el-button\n          >\n        </el-button-group>\n      </span>\n    </el-dialog>\n    <div class=\"pagination block\">\n      <span\n        >Showing {{ paginationData.perPage }} of\n        {{ paginationData.total }} Total Results</span\n      >\n      <el-pagination\n        background\n        layout=\"prev, pager, next\"\n        :current-page=\"paginationPage\"\n        :page-size=\"paginationData.perPage\"\n        :total=\"paginationData.total\"\n        small\n        @current-change=\"addPageNum\"\n      ></el-pagination>\n      <el-select\n        class=\"per-page-select\"\n        size=\"mini\"\n        v-model=\"paginationData.perPage\"\n      >\n        <el-option\n          v-for=\"option in paginationData.perPageOptions\"\n          :value=\"option\"\n          :key=\"option\"\n          >{{ option }}\n        </el-option>\n      </el-select>\n    </div>\n  </div>\n</template>\n<script>\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nconst db = firebase.firestore();\nconst ref = db.collection(\"riderHistories\");\nconst riderRef = db.collection(\"riders\");\nimport { EventService } from \"../main\";\nexport default {\n  name: \"trips\",\n\n  data: () => ({\n    headers: [\n      { text: \"Date\", value: \"time\", sortable: true },\n      { text: \"Rider Name\", value: \"userFullName\", sortable: true },\n      { text: \"Driver Name\", value: \"driverFullName\", sortable: true },\n      { text: \"Status\", sortable: false },\n      { text: \"Final Price\", value: \"finalPrice\", sortable: true },\n    ],\n    otherHeaders: [\n      { text: \"Date\", value: \"time\", sortable: true },\n      { text: \"Rider Name\", value: \"userFullName\", sortable: true },\n      { text: \"Reason\", value: \"userFullName\", sortable: true },\n      { text: \"Status\", sortable: false },\n    ],\n\n    status: \"Completed\",\n    search: \"\",\n    ridersData: [],\n    comfirmationBox: false,\n    message: \"\",\n    currentAction: \"\",\n    loading: false,\n    filters: {\n      parentDate: \"\",\n      driverFullName: \"\",\n      riderFullName: \"\",\n      finalPrice: \"\",\n      status: 8,\n    },\n    dialog: false,\n    tripsDetail: {},\n    tripsInfo: [],\n    dailyEarningDetail: {},\n    authUser: {},\n    ridoesTrips: [],\n    riderData: [],\n    driverData: [],\n    showInformation: false,\n    details: {},\n    statusMap: {\n      2: \"PENDING\",\n      3: \"ACCEPTED\",\n      4: \"DECLINED\",\n      5: \"COMING\",\n      6: \"REACHED\",\n      7: \"BEGUN\",\n      8: \"COMPLETED\",\n      9: \"CANCELED\",\n      11: \"DRIVER_CANCELLED\",\n    },\n    dataToPost: {\n      from: new Date(\"2021-01-01\"),\n      fleetId: \"default\",\n      to: new Date(),\n    },\n\n    activeName: \"first\",\n    paginationData: {\n      perPage: 10,\n      currentPage: 0,\n      perPageOptions: [10, 20, 50],\n      total: 0,\n    },\n    status: \"Completed\",\n    showFilters: false,\n    search_by: \"\",\n    tabs: [\n      {\n        text: \"Completed\",\n        name: \"first\",\n      },\n      {\n        text: \"Begun\",\n        name: \"second\",\n      },\n      {\n        text: \"Canceled\",\n        name: \"third\",\n      },\n    ],\n    currentRow: null,\n  }),\n  computed: {\n    paginationPage() {\n      return this.paginationData.currentPage + 1;\n    },\n    driverDetail() {\n      if (this.status === \"Completed\") {\n        const start =\n            this.paginationData.currentPage * this.paginationData.perPage,\n          end = start + this.paginationData.perPage;\n        const data = this.driverData\n          .filter(\n            (el) =>\n              el.driverId &&\n              el.rideStatus &&\n              el.rideStatus.toString().includes(\"8\")\n          )\n          .sort((a, b) => new Date(b.time) - new Date(a.time));\n\n        this.paginationData.total = data.length;\n        console.dir(data);\n        return data.slice(start, end);\n      } else if (this.status === \"Begun\") {\n        const start =\n            this.paginationData.currentPage * this.paginationData.perPage,\n          end = start + this.paginationData.perPage;\n        const data = this.driverData\n          .filter(\n            (el) =>\n              el.driverId &&\n              el.driver &&\n              el.rideStatus &&\n              el.rideStatus.toString().includes(\"7\")\n          )\n          .sort((a, b) => new Date(b.time) - new Date(a.time));\n        this.paginationData.total = data.length;\n\n        return data.slice(start, end);\n      } else if (this.status == \"Canceled\") {\n        const start =\n            this.paginationData.currentPage * this.paginationData.perPage,\n          end = start + this.paginationData.perPage;\n        const data = this.ridoesTrips.filter((x) => x.state.canceled);\n        this.paginationData.total = data.length;\n        return data.slice(start, end);\n      }\n      return [];\n    },\n    tripFilterData() {\n      if (this.status === \"Completed\") {\n        return this.driverDetail.filter((ele) => {\n          return (\n            ele.parentDate &&\n            ele.parentDate.toString().includes(this.filters.parentDate) &&\n            ele.driver &&\n            ele.driver.driverFirstName &&\n            ele.driver.driverFirstName\n              .toString()\n              .includes(this.filters.driverFullName) &&\n            ele.user &&\n            ele.user.userFullName &&\n            ele.user.userFullName\n              .toString()\n              .includes(this.filters.riderFullName) &&\n            ele.finalPrice &&\n            ele.finalPrice.toString().includes(this.filters.finalPrice)\n          );\n        });\n      } else {\n        return this.driverDetail;\n      }\n    },\n  },\n  created() {\n    EventService.$emit(\"loading\", \"show\");\n    this.getDrivers();\n    this.getRiderInfo();\n    this.getInprogress();\n  },\n  methods: {\n    searchBy() {\n      if (this.search_by === \"Date\") {\n        this.filters.parentDate = this.search;\n      } else if (this.search_by === \"Driver Name\") {\n        this.filters.driverFullName = this.search;\n      } else if (this.search_by === \"Rider Name\") {\n        this.filters.riderFullName = this.search;\n      } else if (this.search_by === \"Price\") {\n        this.filters.finalPrice = this.search;\n      } else {\n        this.filters.driverFullName = this.search;\n      }\n    },\n\n    addPageNum(page) {\n      console.log(page);\n      this.paginationData.currentPage = page - 1;\n    },\n    handleCurrentChange(row) {\n      this.dialog = true;\n      this.details = row;\n      this.currentRow = row;\n    },\n    handleClose() {\n      this.currentRow = null;\n      console.log(this.currentRow);\n      this.dialog = false;\n    },\n    getDrivers() {\n      if (this.loading) return;\n      this.loading = true;\n      ref.get().then((data) => {\n        const response = data.docs;\n        response.forEach((x) => {\n          this.driverData.push(Object.assign({}, ...Object.values(x.data())));\n        });\n\n        EventService.$emit(\"loading\", \"hide\");\n      });\n    },\n\n    getRiderInfo() {\n      riderRef.get().then((data) => {\n        this.riderData = { ...data.docs.map((value) => value.data()) };\n        EventService.$emit(\"loading\", \"hide\");\n      });\n    },\n    getInprogress() {\n      const api = this.axios.create({\n        headers: {\n          common: {\n            \"Content-Type\": \"application/json\",\n            \"X-API-Key\":\n              \"NJjy0LIuZVCPGWjyjfHsYdL9TAQiVZbP:FgXY7PrpLCpeboYy5y5BWQp-KBzaHQJ83p7parhnAGCu0W5XJIQYp7IkkltqHbk-\",\n            Accept: \"application/json\",\n          },\n        },\n      });\n      api\n        .post(\n          \"https://api.rideos.ai/ride-hail-operations/v1/GetTrips\",\n          this.dataToPost\n        )\n        .then(({ data }) => {\n          this.ridoesTrips = data[\"trip\"];\n        })\n        .finally(() => {\n          EventService.$emit(\"loading\", \"hide\");\n        });\n    },\n    setStatusFilter(tab) {\n      this.status = tab.label;\n      console.log(this.status);\n    },\n\n    getRiderAvatarUrl(riderId) {\n      const riderObj = Object.values(this.riderData).find(\n        (obj) => obj.userId === riderId\n      );\n      if (riderObj && riderObj[\"userAvatarUrl\"] !== \"N/A\") {\n        return riderObj[\"userAvatarUrl\"];\n      }\n      return require(`@/assets/img/default-user.jpg`);\n    },\n    getRiderName(riderId) {\n      const riderObj = Object.values(this.riderData).find(\n        (obj) => obj.userId === riderId\n      );\n      if (riderObj) {\n        return riderObj[\"userFullName\"];\n      }\n      return \"No Name\";\n    },\n    getRiderEmail(riderId) {\n      const riderObj = Object.values(this.riderData).find(\n        (obj) => obj.userId === riderId\n      );\n      if (riderObj) {\n        return riderObj[\"userEmail\"];\n      }\n      return \"-\";\n    },\n    getItemObjectAvatarUrl(item, objName, propertyName) {\n      if (\n        item &&\n        typeof item[objName] !== \"undefined\" &&\n        typeof item[objName][propertyName] !== \"undefined\" &&\n        item[objName][propertyName] !== \"N/A\"\n      ) {\n        return item[objName][propertyName];\n      }\n      return require(`@/assets/img/default-user.jpg`);\n    },\n    getItemObjectProperty(item, objName, propertyName) {\n      if (\n        item &&\n        typeof item[objName] !== \"undefined\" &&\n        typeof item[objName][propertyName] !== \"undefined\"\n      ) {\n        return item[objName][propertyName];\n      }\n      return \"No Data Available\";\n    },\n  },\n};\n</script>\n\n<style scoped>\n.grey-text {\n  color: #cecece;\n}\n.green-text {\n  color: darkgreen;\n}\n\n.img-user {\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n}\n\n.driver-name {\n  position: absolute;\n  top: 26px;\n  left: 80px;\n}\n.text-center {\n  text-align: center;\n}\n</style>\n"]}]}