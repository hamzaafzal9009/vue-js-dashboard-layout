{"remainingRequest":"/Library/WebServer/Documents/Projects/vue/mViteDashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Library/WebServer/Documents/Projects/vue/mViteDashboard/src/components/DriverComponents/Documents.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Library/WebServer/Documents/Projects/vue/mViteDashboard/src/components/DriverComponents/Documents.vue","mtime":1614812729113},{"path":"/Library/WebServer/Documents/Projects/vue/mViteDashboard/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Library/WebServer/Documents/Projects/vue/mViteDashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/vue/mViteDashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Documents.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"Documents.vue","sourceRoot":"src/components/DriverComponents","sourcesContent":["<template>\n  <div id=\"dashboard-container\">\n    <el-row :gutter=\"20\">\n      <el-col\n        v-for=\"(item, index) in documents\"\n        :key=\"index\"\n        :xs=\"24\"\n        :sm=\"24\"\n        :md=\"8\"\n      >\n        <el-card>\n          <div class=\"card-header\">\n            <div class=\"card-title\">\n              <h3>{{ item.title }}</h3>\n            </div>\n            <div class=\"card-actions\">\n              <el-button\n                icon=\"el-icon-edit\"\n                circle\n                @click=\"openImageDialog(item, 'isProfile')\"\n              ></el-button>\n            </div>\n          </div>\n          <div class=\"card-body\">\n            <el-image\n              style=\"width: 100%; height: 175px; cursor: pointer\"\n              @click=\"openviewDialog(item, authUser[item.value])\"\n              :src=\"authUser[item.value]\"\n              fit=\"contain\"\n            ></el-image>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <el-row :gutter=\"20\">\n      <el-col\n        v-for=\"(item, index) in vehicleDocs\"\n        :key=\"index + '0001'\"\n        :xs=\"24\"\n        :sm=\"24\"\n        :md=\"8\"\n      >\n        <el-card>\n          <div class=\"card-header\">\n            <div class=\"card-title\">\n              <h3>{{ item.title }}</h3>\n            </div>\n            <div class=\"card-actions\">\n              <el-button icon=\"el-icon-edit\" circle></el-button>\n            </div>\n          </div>\n          <div class=\"card-body\">\n            <el-image\n              style=\"width: 100%; height: 175px; cursor: pointer\"\n              @click=\"openviewDialog(item, vehicleDetail[item.value])\"\n              :src=\"\n                vehicleDetail[item.value]\n                  ? vehicleDetail[item.value]\n                  : vehicleDetail[item.nextValue]\n              \"\n              fit=\"contain\"\n            ></el-image>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <el-dialog :visible.sync=\"showImages\" width=\"30%\">\n      <el-image\n        style=\"width: 100%; height: 100%; cursor: pointer\"\n        :src=\"similarImage\"\n        fit=\"contain\"\n      ></el-image>\n    </el-dialog>\n    <ImageUpload\n      v-if=\"imageDialog\"\n      v-model=\"imageName\"\n      :resize=\"false\"\n      :title=\"title\"\n      @close=\"imageDialog = false\"\n      @imageName=\"imageName = $event\"\n      @input=\"updateProfileImage\"\n    />\n  </div>\n</template>\n<script>\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\nconst db = firebase.firestore();\nconst refVehicle = db.collection(\"vehicles\");\nconst refDrivers = db.collection(\"drivers\");\nimport { EventService } from \"../../main\";\n\nexport default {\n  name: \"Documents\",\n  components: {\n    ImageUpload: () => import(\"./ImageUpload\"),\n  },\n  data() {\n    return {\n      title: \"\",\n      openProfileEditForm: false,\n      authUser: {},\n      vehicleDetail: {},\n      imageDialog: false,\n      imageUrl: \"\",\n      similarImage: \"\",\n      imageName: \"\",\n      showImages: false,\n      currentFile: \"\",\n      currentIndex: 0,\n      formValues: {},\n      documents: [\n        {\n          title: \"Driver Photo\",\n          value: \"driverAvatarUrl\",\n          name: \"profilePhoto\",\n          src: \"https://cdn.vuetifyjs.com/images/cards/store.jpg\",\n        },\n        {\n          title: \"Driver Id\",\n          value: \"driverIDUrl\",\n          name: \"driver_id\",\n          src: \"https://cdn.vuetifyjs.com/images/cards/store.jpg\",\n        },\n        {\n          title: \"Driver License\",\n          value: \"driverLicenseUrl\",\n          name: \"driver_license\",\n          src: \"https://cdn.vuetifyjs.com/images/cards/store.jpg\",\n        },\n      ],\n      currentValue: [],\n      loading: false,\n      vehicleDocs: [\n        {\n          title: \"Vehicle Photo\",\n          value: \"vehicleAvatarUrl\",\n          path: \"vehicles/\",\n          src: \"https://cdn.vuetifyjs.com/images/cards/store.jpg\",\n        },\n        {\n          title: \"PSV Taxi License\",\n          value: \"vehicleLicenseUrl\",\n          nextValue: \"vehicleLicense\",\n          path: \"vehicleLicense/\",\n          src: \"https://cdn.vuetifyjs.com/images/cards/store.jpg\",\n        },\n        {\n          title: \"Proof of Insurance\",\n          value: \"proofOfInsuranceUrl\",\n          path: \"vehiclesdocs/\",\n          src: \"https://cdn.vuetifyjs.com/images/cards/store.jpg\",\n        },\n      ],\n      currentType: \"\",\n      items: [\n        {\n          text: \"Dashboard\",\n          disabled: false,\n          href: \"/dashboard\",\n        },\n        {\n          text: \"Documents\",\n          disabled: true,\n          href: \"breadcrumbs_link_1\",\n        },\n      ],\n      currentName: \"\",\n      currentPath: \"\",\n    };\n  },\n  created() {\n    EventService.$emit(\"loading\", \"show\");\n    this.getVechicleInfo();\n    this.getDriverInfo();\n  },\n  methods: {\n    handleClose(done) {\n      this.$confirm(\"Are you sure to close this dialog?\")\n        .then((_) => {\n          done();\n        })\n        .catch((_) => {});\n    },\n    openImageDialog(detail, type) {\n      this.title = detail.title;\n      this.imageDialog = true;\n      this.currentValue = detail.value;\n      this.currentType = type;\n      this.currentName = detail.name;\n      this.currentPath = detail.path;\n    },\n    getDriverInfo() {\n      refDrivers\n        .doc(this.$route.params.id)\n        .get()\n        .then((snapshot) => {\n          EventService.$emit(\"loading\", \"hide\");\n            \n          this.authUser = { ...snapshot.data() };\n        })\n        .catch((error) => ({\n          errorCode: error.code,\n          errorMessage: error.message,\n        }));\n\n      console.dir(this.authUser);\n    },\n    openviewDialog(detail, image) {\n      this.similarImage = image;\n      // console.dir(image);\n      this.showImages = true;\n    },\n    getVechicleInfo() {\n      refVehicle\n        .doc(this.$route.params.id)\n        .get()\n        .then((snapshot) => {\n          EventService.$emit(\"loading\", \"hide\");\n              \n          this.vehicleDetail = { ...snapshot.data() };\n        })\n        .catch((error) => ({\n          errorCode: error.code,\n          errorMessage: error.message,\n        }));\n    },\n    updateProfileImage(image) {\n      this.imageUrl = URL.createObjectURL(image);\n      this.imageDialog = false;\n      if (this.currentType === \"isProfile\") {\n        this.updateDriversImage(image, this.currentValue, this.currentName);\n      } else {\n        this.updateVechicleDocs(image, this.currentValue, this.currentPath);\n      }\n    },\n    updateDriversImage(image, value, name) {\n      if (this.loading) return;\n      this.loading = true;\n      firebase\n        .storage()\n        .ref(\"/drivers/\" + this.$route.params.id + \"/\" + name)\n        .put(image, { contentType: `image/jpg` })\n        .then((snapshot) => {\n          snapshot.ref.getDownloadURL().then((url) => {\n            refDrivers\n              .doc(this.$route.params.id)\n              .update({ [value]: url })\n              .then(() => {\n                this.setNotifyMessage(\"Successfully Upload docs\");\n                this.driversInfo();\n              });\n          });\n        })\n        .finally(() => {\n          \n          this.loading = false;\n        });\n    },\n    driversInfo() {\n      refDrivers\n        .doc(this.$route.params.id)\n        .get()\n        .then((snapshot) => {\n          this.$nextTick(() => {\n            this.authUser = snapshot.data();\n          });\n        })\n        .catch((error) => ({\n          errorCode: error.code,\n          errorMessage: error.message,\n        }));\n    },\n    updateVechicleDocs(image, value, path) {\n      if (this.loading) return;\n      this.loading = true;\n      firebase\n        .storage()\n        .ref(path + this.$route.params.id)\n        .put(image, { contentType: `image/jpg` })\n        .then((snapshot) => {\n          snapshot.ref.getDownloadURL().then((url) => {\n            refVehicle\n              .doc(this.$route.params.id)\n              .update({ [value]: url })\n              .then(() => {\n                this.setNotifyMessage(\"Successfully Upload docs\");\n                this.getVechicleInfo();\n              });\n          });\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    },\n  },\n};\n</script>\n"]}]}