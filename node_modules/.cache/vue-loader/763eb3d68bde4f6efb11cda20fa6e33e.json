{"remainingRequest":"/Library/WebServer/Documents/Projects/vue/mViteDashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Library/WebServer/Documents/Projects/vue/mViteDashboard/src/components/Drivers.vue?vue&type=template&id=3cc3fc6a&scoped=true&","dependencies":[{"path":"/Library/WebServer/Documents/Projects/vue/mViteDashboard/src/components/Drivers.vue","mtime":1615844764129},{"path":"/Library/WebServer/Documents/Projects/vue/mViteDashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/vue/mViteDashboard/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/vue/mViteDashboard/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Library/WebServer/Documents/Projects/vue/mViteDashboard/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}