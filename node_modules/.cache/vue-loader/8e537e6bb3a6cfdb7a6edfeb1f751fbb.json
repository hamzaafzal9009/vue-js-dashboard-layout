{"remainingRequest":"/Library/WebServer/Documents/Projects/vite/m-driver-dashboard/node_modules/vue-loader/lib/index.js??vue-loader-options!/Library/WebServer/Documents/Projects/vite/m-driver-dashboard/src/components/Documents.vue?vue&type=style&index=0&id=33c82eb8&scoped=true&lang=css&","dependencies":[{"path":"/Library/WebServer/Documents/Projects/vite/m-driver-dashboard/src/components/Documents.vue","mtime":1619025691871},{"path":"/Library/WebServer/Documents/Projects/vite/m-driver-dashboard/node_modules/css-loader/dist/cjs.js","mtime":1618923177229},{"path":"/Library/WebServer/Documents/Projects/vite/m-driver-dashboard/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1618923178100},{"path":"/Library/WebServer/Documents/Projects/vite/m-driver-dashboard/node_modules/postcss-loader/src/index.js","mtime":1618923177860},{"path":"/Library/WebServer/Documents/Projects/vite/m-driver-dashboard/node_modules/cache-loader/dist/cjs.js","mtime":1618923176918},{"path":"/Library/WebServer/Documents/Projects/vite/m-driver-dashboard/node_modules/vue-loader/lib/index.js","mtime":1618923178100}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmZsb2F0LXJpZ2h0IHsKICBmbG9hdDogcmlnaHQ7Cn0KLmhlaWdodC0yNTAgewogIGhlaWdodDogMjUwcHg7Cn0K"},{"version":3,"sources":["Documents.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6RA;AACA;AACA;AACA;AACA;AACA","file":"Documents.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h3>Documents</h3>\n    <el-row :gutter=\"20\">\n      <el-col :md=\"8\" v-for=\"(item, index) in documents\" :key=\"index\">\n        <el-card class=\"box-card\" shadow=\"always\">\n          <el-row :gutter=\"20\">\n            <el-col :md=\"12\">\n              <div class=\"o-card-title-3\">\n                {{ item.title }}\n              </div>\n            </el-col>\n            <el-col :md=\"12\">\n              <div class=\"o-card-title-3\">\n                <el-button\n                  icon=\"el-icon-edit\"\n                  class=\"float-right\"\n                  circle\n                  @click=\"openImageDialog(item, 'isProfile')\"\n                ></el-button>\n              </div>\n            </el-col>\n          </el-row>\n          <br />\n          <el-row :gutter=\"20\">\n            <el-col :span=\"24\">\n              <el-image\n                :src=\"authUser[item.value]\"\n                class=\"height-250\"\n                fit=\"fit\"\n              >\n                <div slot=\"placeholder\" class=\"image-slot\">\n                  Loading<span class=\"dot\">...</span>\n                </div>\n              </el-image>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-col>\n    </el-row>\n    <br />\n    <el-row :gutter=\"20\">\n      <el-col :md=\"8\" v-for=\"(item, index) in vehicleDocs\" :key=\"index\">\n        <el-card class=\"box-card\" shadow=\"always\">\n          <el-row :gutter=\"20\">\n            <el-col :md=\"12\">\n              <div class=\"o-card-title-3\">\n                {{ item.title }}\n              </div>\n            </el-col>\n            <el-col :md=\"12\">\n              <div class=\"o-card-title-3\">\n                <el-button\n                  icon=\"el-icon-edit\"\n                  @click=\"openImageDialog(item, 'isVehicle')\"\n                  class=\"float-right\"\n                  circle\n                ></el-button>\n              </div>\n            </el-col>\n          </el-row>\n          <br />\n          <el-row :gutter=\"20\">\n            <el-col :span=\"24\">\n              <el-image\n                :src=\"\n                  vehicleDetail[item.value]\n                    ? vehicleDetail[item.value]\n                    : vehicleDetail[item.nextValue]\n                \"\n                class=\"height-250\"\n                fit=\"fit\"\n              >\n                <div slot=\"placeholder\" class=\"image-slot\">\n                  Loading<span class=\"dot\">...</span>\n                </div>\n              </el-image>\n            </el-col>\n          </el-row>\n        </el-card>\n      </el-col>\n    </el-row>\n    <image-upload\n      v-if=\"imageDialog\"\n      v-model=\"imageName\"\n      :resize=\"false\"\n      :title=\"title\"\n      @close=\"imageDialog = false\"\n      @imageName=\"imageName = $event\"\n      @input=\"updateProfileImage\"\n    >\n    </image-upload>\n  </div>\n</template>\n<script>\nimport ImageUpload from \"./DocumentsComponents/ImageUpload\";\nimport { EventService } from \"../main.js\";\nimport firebase from \"../plugins/firebase\";\nimport \"firebase/storage\";\nconst db = firebase.firestore();\nconst refVehicle = db.collection(\"vehicles\");\nconst refDrivers = db.collection(\"drivers\");\nexport default {\n  components: { ImageUpload },\n\n  data() {\n    return {\n      title: \"\",\n      openProfileEditForm: false,\n      authUser: {},\n      vehicleDetail: {},\n      imageDialog: false,\n      imageUrl: \"\",\n      imageName: \"\",\n      currentFile: \"\",\n      currentIndex: 0,\n      formValues: {},\n      documents: [\n        {\n          title: \"Driver Photo\",\n          value: \"driverAvatarUrl\",\n          name: \"profilePhoto\",\n          src: \"https://cdn.vuetifyjs.com/images/cards/store.jpg\",\n        },\n        {\n          title: \"National Id\",\n          value: \"driverIDUrl\",\n          name: \"driver_id\",\n          src: \"https://cdn.vuetifyjs.com/images/cards/store.jpg\",\n        },\n        {\n          title: \"Driver License\",\n          value: \"driverLicenseUrl\",\n          name: \"driver_license\",\n          src: \"https://cdn.vuetifyjs.com/images/cards/store.jpg\",\n        },\n      ],\n      currentValue: [],\n      loading: false,\n      vehicleDocs: [\n        {\n          title: \"Vehicle Photo\",\n          value: \"vehicleAvatarUrl\",\n          path: \"vehicles/\",\n          src: \"https://cdn.vuetifyjs.com/images/cards/store.jpg\",\n        },\n        {\n          title: \"PSV Taxi License\",\n          value: \"vehicleLicenseUrl\",\n          nextValue: \"vehicleLicense\",\n          path: \"vehicleLicense/\",\n          src: \"https://cdn.vuetifyjs.com/images/cards/store.jpg\",\n        },\n        {\n          title: \"Proof of Insurance\",\n          value: \"proofOfInsuranceUrl\",\n          path: \"vehiclesdocs/\",\n          src: \"https://cdn.vuetifyjs.com/images/cards/store.jpg\",\n        },\n      ],\n      currentType: \"\",\n      items: [\n        {\n          text: \"Dashboard\",\n          disabled: false,\n          href: \"/dashboard\",\n        },\n        {\n          text: \"Documents\",\n          disabled: true,\n          href: \"breadcrumbs_link_1\",\n        },\n      ],\n      currentName: \"\",\n      currentPath: \"\",\n    };\n  },\n  created() {\n    this.authUser = JSON.parse(localStorage.getItem(\"authUser\"));\n    this.getVechicleInfo();\n  },\n  methods: {\n    openImageDialog(detail, type) {\n      this.title = detail.title;\n      this.imageDialog = true;\n      this.currentValue = detail.value;\n      this.currentType = type;\n      this.currentName = detail.name;\n      this.currentPath = detail.path;\n    },\n    getVechicleInfo() {\n      EventService.$emit(\"loading\", \"show\");\n      firebase\n        .firestore()\n        .collection(\"vehicles\")\n        .doc(this.authUser.driverId)\n        .get()\n        .then((snapshot) => {\n          EventService.$emit(\"loading\", \"hide\");\n          this.vehicleDetail = { ...snapshot.data() };\n        })\n        .catch((error) => ({\n          errorCode: error.code,\n          errorMessage: error.message,\n        }))\n        .finally(() => EventService.$emit(\"loading\", \"hide\"));\n    },\n    updateProfileImage(image) {\n      this.imageUrl = URL.createObjectURL(image);\n\n      this.imageDialog = false;\n      if (this.currentType === \"isProfile\") {\n        this.updateDriversImage(image, this.currentValue, this.currentName);\n      } else {\n        this.updateVechicleDocs(image, this.currentValue, this.currentPath);\n      }\n    },\n    updateDriversImage(image, value, name) {\n      EventService.$emit(\"loading\", \"show\");\n      firebase\n        .storage()\n        .ref(\"/drivers/\" + this.authUser.driverId + \"/\" + name)\n        .put(image, { contentType: `image/jpg` })\n        .then((snapshot) => {\n          snapshot.ref.getDownloadURL().then((url) => {\n            refDrivers\n              .doc(this.authUser.driverId)\n              .update({ [value]: url })\n              .then((response) => {\n                EventService.$emit(\"loading\", \"hide\");\n                EventService.$emit(\"successMessage\", \"Successfully Updated\");\n                this.driversInfo();\n              });\n          });\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    },\n    driversInfo() {\n      EventService.$emit(\"loading\", \"show\");\n      firebase\n        .firestore()\n        .collection(\"drivers\")\n        .doc(this.authUser.driverId)\n        .get()\n        .then((snapshot) => {\n          this.$nextTick(() => {\n            localStorage.setItem(\"authUser\", JSON.stringify(snapshot.data()));\n            this.authUser = JSON.parse(localStorage.getItem(\"authUser\"));\n          });\n        })\n        .catch((error) => ({\n          errorCode: error.code,\n          errorMessage: error.message,\n        }))\n        .finally(() => EventService.$emit(\"loading\", \"hide\"));\n    },\n    updateVechicleDocs(image, value, path) {\n      if (this.loading) return;\n      this.loading = true;\n      firebase\n        .storage()\n        .ref(path + this.authUser.driverId)\n        .put(image, { contentType: `image/jpg` })\n        .then((snapshot) => {\n          snapshot.ref.getDownloadURL().then((url) => {\n            refVehicle\n              .doc(this.authUser.driverId)\n              .update({ [value]: url })\n              .then((response) => {\n                this.setNotifyMessage(\"Successfully Upload docs\");\n                this.getVechicleInfo();\n              });\n          });\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.float-right {\n  float: right;\n}\n.height-250 {\n  height: 250px;\n}\n</style>\n"]}]}